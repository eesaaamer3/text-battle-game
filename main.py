"""
Eesa Aamer
ICS4U
20/12/19
Assignment 6 - Part 1
This program is the main engine for the battle game. There are three main functions that 
are involved in this program. The first function asks the user if they want to choose the Marvel 
or the DC class of characters. That result triggers the second function, where the user chooses
their specific character. Another character from the other class is then chosen randomly, and the 
match is set up. That result triggers the final function is where the battle takes place. The function runs
on a loop, where the user chooses an attack and the cpu randomly chooses an attack. The computer
constantly updates the user with the character's stats, and ends when one of the character's health 
goes below zero.
"""

import random 
import time
from characters import * # Imports classes from secondary file 

def battle(character1, character2):
    """
    (instance, instance) --> str
    Returns a string indicating whether the user won the battle or not. 
    >>> (Batman, Iron Man)
    "GAME OVER! YOU LOSE!"
    >>> (Wonder Woman, Captain America)
    "OPPONENT DEFEATED! YOU WIN!"
    """
    z = 0
    intro_message = ["BATTLE BEGINS IN 3", "2", "1", "FIGHT!",] # Triggers countdown 
    print("---------------------")
    for word in intro_message:
        time.sleep(1)
        print(word)
    print("---------------------")
    print("YOU GO FIRST. CHOOSE YOUR MOVE")
    while z == 0:
        cpu_move = random.randint(1, 3) # Determines a number used to randomly choose an attack
        if character1.max_hp <= 0: # Condition if user loses the battle 
            print("GAME OVER! YOU LOSE!")
            z = 1
        elif character2.max_hp <= 0: # Condition if user wins battle 
            print("OPPONENT DEFEATED! YOU WIN!")
            z = 1
        elif character1.max_hp > 0 and character2.max_hp > 0: # Condition if both characters are still alive
            try:
                print("\nYOUR CHOICES ARE...\n")
                for value in character1.move_desc: # Displays all attacks character has
                    print(value)
                attack = input("\nWhat is your choice?: ")
                character1.move_set[attack](character1, character2) #Executes attack chosen by user 
                time.sleep(2)
                print("\nOpponent is thinking...")
                time.sleep(2)
                character2.move_set[str(cpu_move)](character2, character1) #CPU executes a random attack
                time.sleep(2)
                print("---------------------")
                print("UPDATED STATS")
                print("{}: {}".format(character1.name, character1.__repr__())) #Updates user stats
                print("{}: {}".format(character2.name, character2.__repr__())) #Updates CPU stats
                print("---------------------")
                time.sleep(2)
            except KeyError:
                print("That is not a valid option. Please try again.")
            
def choose_character(x):
    """
    (str) --> instance, instance 
    Returns two instances, one generated by user and the other randomly chosen by CPU
    >>> ("M")
    Iron Man, Superman
    >>> ("D")
    Batman, Black Widow
    """
    y = 0
    # Builds instances of both Marvel and DC characters 
    marvel_characters = [IronMan("Iron Man", 100, 100), CaptainAmerica("Captain America", 120, 150), BlackWidow("Black Widow", 200, 50)]
    dc_characters = [Batman("Batman", 100, 100, 1.00), Superman("Superman", 300, 50, 1.00), WonderWoman("Wonder Woman", 150, 100, 1.00)]
    cpu_choice = random.randint(0, 2) # Generates a random number CPU uses to choose character 
    while y == 0:
        if x == "M": # if user chooses the Marvel class
            character2 = dc_characters[cpu_choice] # CPU chooses a DC character 
            choice = input("Choose a character: [I]ron Man, [C]aptain America, [B]lack Widow: ").upper()
            if choice == "I":
                character1 = marvel_characters[0] # Generates an Iron Man instance 
                y = 1
            elif choice == "C":
                character1 = marvel_characters[1] # Generates an Captain America instance 
                y = 1
            elif choice == "B":
                character1 = marvel_characters[2] # Generates an Black Widow instance 
                y = 1
            else: 
                print("That is not a valid option. Please try again.")
        if x == "D": # Condition if user chooses DC class 
            character2 = marvel_characters[cpu_choice] #CPU randomly generates Marvel class
            choice = input("Choose a character: [B]atman, [S]uperman, [W]onder Woman: ").upper()
            if choice == "B":
                character1 = dc_characters[0] # Generates a Batman instance 
                y = 1
            elif choice == "S":
                character1 = dc_characters[1] # Generates a Superman instance 
                y = 1
            elif choice == "W":
                character1 = dc_characters[2] # Generates a Wonder Woman instance 
                y = 1
            else: 
                print("That is not a valid option. Please try again.")
    print("{} VS {}".format(character1.name.upper(), character2.name.upper())) # Prints the two characters fighting each other 
    time.sleep(0.5)
    print("---------------------")
    print("{}: {}".format(character1.name, character1.__repr__())) #Displays user character stats
    print("{}: {}".format(character2.name, character2.__repr__())) # Displays CPU character stats 
    
    battle(character1,character2) # executes battle with both characters generated 
        
def start():
    """
    (no arguments) --> str
    Returns a string that displays user choice for which class they want to choose
    >>> ()
    "M"
    >>> ()
    "D"
    """
    x = 0
    while x == 0:
        initial_choice = input("Welcome to the Text Battle Game! Please select M for Marvel or D for DC!: ").upper() # Asks user for class choice
        if initial_choice == "M": # Condition if user chooses Marvel class
            choose_character("M") # Triggers character function using Marvel class
            x = 1
        elif initial_choice == "D": # Condition if user chooses DC class
            choose_character("D") # Triggers character function using DC class 
            x = 1
        else:
            print("That is not a valid option. Please try again.")
            



start()